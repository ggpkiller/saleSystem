<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.nxlexiaoyao.sales.dao.MemberDao">


  <insert id="save" parameterType="member">
    INSERT INTO "member"(id,account,address,bank_account,bank_name,id_number,mobile,name,password,
    salt
    )VALUES(
    #{id},
    #{account},
    #{address},
    #{bankAccount},
    #{bankName},
    #{idNumber},
    #{mobile},
    #{name},
    #{password},
    #{salt}
    );
  </insert>


  <select id="counter" resultType="integer">
    SELECT count(*) FROM  "member";
  </select>


  <select id="selectByIndex" parameterType="integer" resultType="member">
    SELECT * FROM "member" ORDER BY insert_time DESC LIMIT #{limit} OFFSET #{offset};
  </select>


  <select id="selectByAccount" parameterType="string" resultType="member">
    SELECT * FROM "member" WHERE account = #{account};
  </select>

  <select id="selectById" parameterType="string" resultType="member">
    SELECT * FROM "member" WHERE id = #{id};
  </select>

  <select id="selectLikeName" parameterType="string" resultType="saleForm">
    SELECT * FROM  sale_form WHERE name = #{name} AND verify_status = 'Y' AND is_out = 'N' and rule_id = #{ruleId};
  </select>


  <update id="updateFull" parameterType="member">
    UPDATE member
    <set>
      account = #{account},
      address = #{address},
      bank_account = #{bankAccount},
      bank_name = #{bankName},
      id_number = #{idNumber},
      mobile = #{mobile},
      name = #{name},
      password = #{password},
      salt = #{salt},
      insert_time = #{insertTime},
      integral = #{integral}
    </set>
    WHERE id = #{id}
  </update>



  <select id="queryTeam" parameterType="string" resultType="teamVo">
    BEGIN;
CREATE TEMPORARY TABLE tm_1(member_id varchar(40),member_name varchar(50),lvl int2) on commit drop;


INSERT INTO tm_1
SELECT m1.id AS member_id,m1.name AS member_name,-1 AS lvl FROM member m1 INNER JOIN member m2 ON m1.id = m2.referee_id AND m2.id = #{memberId};



CREATE TEMPORARY TABLE tm0(member_id varchar(40),member_name varchar(50),lvl int2) on commit drop;
INSERT INTO tm0
SELECT id AS member_id,name AS member_name,0 AS lvl FROM member WHERE id = #{memberId};




CREATE TEMPORARY TABLE tm1(member_id varchar(40),member_name varchar(50),lvl int2) on commit drop;


INSERT INTO tm1

SELECT id AS member_id,name AS member_name,1 AS lvl FROM member WHERE referee_id = #{memberId};



CREATE TEMPORARY TABLE tm2(member_id varchar(40),member_name varchar(50),lvl int2) on commit drop;


INSERT INTO tm2
SELECT m.id AS member_id,m.name AS member_name,2 AS lvl FROM member m WHERE m.referee_id IN(SELECT member_id FROM tm1);


CREATE TEMPORARY TABLE tm3(member_id varchar(40),member_name varchar(50),lvl int2) on commit drop;


INSERT INTO tm3

SELECT m.id AS member_id,m.name AS member_name,3 AS lvl FROM member m WHERE m.referee_id IN(SELECT member_id FROM tm2);

SELECT team.* FROM(
SELECT * FROM tm_1
UNION ALL
SELECT * FROM tm0
UNION ALL
SELECT * FROM tm1
UNION ALL
SELECT * FROM tm2
UNION ALL
SELECT * FROM tm3
) team ORDER BY team.lvl;

COMMIT;
  </select>
</mapper>